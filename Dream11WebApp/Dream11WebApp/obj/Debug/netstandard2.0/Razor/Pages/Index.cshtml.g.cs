#pragma checksum "F:\CurrentWorkBk\BlazorApp\Dream11WebApp\Dream11WebApp\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a9947bb721b5eb9048196585eeb32675a7728a22"
// <auto-generated/>
#pragma warning disable 1591
namespace Dream11WebApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using Dream11WebApp;
    using Dream11WebApp.Shared;
    using Microsoft.AspNetCore.Components.Services;
    using Dream11WebApp.Model;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<div style=\"margin-top: 10px\"></div>\r\n");
            builder.AddMarkupContent(1, "<div class=\"page-header text-center\">\r\n    <h1>Login</h1>\r\n</div>\r\n");
            builder.OpenElement(2, "div");
            builder.AddAttribute(3, "class", "form-group");
            builder.AddContent(4, "\r\n    ");
            builder.AddMarkupContent(5, "<label for=\"username\">Email address:</label>\r\n    ");
            builder.OpenElement(6, "input");
            builder.AddAttribute(7, "type", "text");
            builder.AddAttribute(8, "class", "form-control");
            builder.AddAttribute(9, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(register.username));
            builder.AddAttribute(10, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => register.username = __value, register.username));
            builder.CloseElement();
            builder.AddContent(11, "\r\n");
            builder.CloseElement();
            builder.AddContent(12, "\r\n");
            builder.OpenElement(13, "div");
            builder.AddAttribute(14, "class", "form-group");
            builder.AddContent(15, "\r\n    ");
            builder.AddMarkupContent(16, "<label for=\"pwd\">Password:</label>\r\n    ");
            builder.OpenElement(17, "input");
            builder.AddAttribute(18, "type", "password");
            builder.AddAttribute(19, "class", "form-control");
            builder.AddAttribute(20, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(register.password));
            builder.AddAttribute(21, "onchange", Microsoft.AspNetCore.Components.EventCallback.Factory.CreateBinder(this, __value => register.password = __value, register.password));
            builder.CloseElement();
            builder.AddContent(22, "\r\n");
            builder.CloseElement();
            builder.AddContent(23, "\r\n");
            builder.OpenElement(24, "div");
            builder.AddAttribute(25, "class", "row");
            builder.AddContent(26, "\r\n    ");
            builder.OpenElement(27, "div");
            builder.AddAttribute(28, "class", "col-xs-6 col-sm-6 col-md-6");
            builder.AddContent(29, "\r\n        ");
            builder.OpenElement(30, "div");
            builder.AddAttribute(31, "class", "form-group");
            builder.AddContent(32, "\r\n            ");
            builder.OpenElement(33, "button");
            builder.AddAttribute(34, "type", "submit");
            builder.AddAttribute(35, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.UIMouseEventArgs>(this, Login));
            builder.AddAttribute(36, "class", "btn btn-info btn-block");
            builder.AddContent(37, "Submit");
            builder.CloseElement();
            builder.AddMarkupContent(38, "     \r\n        ");
            builder.CloseElement();
            builder.AddContent(39, "\r\n    ");
            builder.CloseElement();
            builder.AddContent(40, "\r\n    ");
            builder.AddMarkupContent(41, "<div class=\"col-xs-6 col-sm-6 col-md-6\">\r\n        <div class=\"form-group\">\r\n            <a href=\"/Registration\">Create an account!</a>\r\n        </div>\r\n    </div>\r\n\r\n");
            builder.CloseElement();
            builder.AddMarkupContent(42, "\r\n\r\n");
            builder.OpenComponent<Dream11WebApp.Pages.AdImage>(43);
            builder.CloseComponent();
            builder.AddMarkupContent(44, "\r\n \r\n\r\n");
            builder.AddMarkupContent(45, @"<style>
    .btn {
        -webkit-tap-highlight-color: transparent;
        border: 0;
        cursor: pointer;
        height: 28px;
        margin: 0;
        padding: 0 15px;
        text-decoration: none;
        text-transform: uppercase;
        text-align: center;
        border-radius: 4px;
        font-family: inherit;
        font-size: var(--font-small);
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .form-group {
        margin-left: 1rem;
        margin-right: 2rem;
    }

    .btn-primary {
        margin-left: 1rem;
    }

    .row {
        margin-left: -16px;
    }
</style>");
        }
        #pragma warning restore 1998
#line 37 "F:\CurrentWorkBk\BlazorApp\Dream11WebApp\Dream11WebApp\Pages\Index.cshtml"
           
    Login register = new Login();
    Login Registers;
    ExampleJsInterop exampleJsInterop;

    async Task Login()
    {
        exampleJsInterop = new ExampleJsInterop(JSRuntime);

        //Registers = await LoginData.UserLoginAsync(register);
        //Console.WriteLine(Registers);
        //if (Registers == null)
        //{
        //    error = "someting its wrong!!!";
        //}
        //else
        //{
        //   UriHelper.NavigateTo("/Home");
        //}

        if (register.username == null || register.password == null)
        {
            toastService.ShowToast("Can not null username & password", Common.ToastLevel.Error);
        }
        else
        {
            Registers = await LoginData.UserLoginAsync(register);
            Console.WriteLine(Registers);
            if (Registers.firstName != null)
            {
                toastService.ShowToast("Welcome to " + Registers.username + "", Common.ToastLevel.Success);
                await exampleJsInterop.SetStringItem<Login>("utoken",Registers.authToken);
                UriHelper.NavigateTo("/Home");
            }
            else
            {
                toastService.ShowToast("Something it's wrong", Common.ToastLevel.Error);
            }
        }

    }

#line default
#line hidden
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ILogin LoginData { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private ToastService toastService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IUriHelper UriHelper { get; set; }
    }
}
#pragma warning restore 1591
